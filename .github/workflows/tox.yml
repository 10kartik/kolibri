name: Python tests

on: [push, pull_request]

jobs:
  unit_test:
    name: Python unit tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [2.7, 3.4, 3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: tox env cache
      uses: actions/cache@v2
      with:
        path: ./.tox
        key: ${{ runner.os }}-tox-${{ hashFiles('**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-tox-
    - name: Test with tox
      run: tox -e py${{ matrix.python-version }}
  postgres:
    name: Python postgres unit tests
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.5 for Postgres
      uses: actions/setup-python@v2
      with:
        python-version: 3.5
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: tox env cache
      uses: actions/cache@v2
      with:
        path: ./.tox
        key: ${{ runner.os }}-tox-${{ hashFiles('**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-tox-
    - name: Test with tox
      run: tox -e postgres
